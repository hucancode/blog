{"pageProps":{"title":"Unreal Engine Networking - Session","subtitle":"How to use Session to implement a simple game lobby mechanic","category":"ue","date":"2022-06-21","content":"<h2 id=\"introduction\" class=\"heading\">Introduction</h2>\n<p><code>// Cool intro goes here</code></p>\n<h3 id=\"make-sure-you-enabled-online-subsystem-plugin\">Make sure you enabled online subsystem plugin</h3>\n<p><code>// Super detail about how to enable online subsystem</code></p>\n<h2 id=\"feature-design\" class=\"heading\">Feature design</h2>\n<p><code>// Explain why we need CreateSession, FindSessions, JoinSessions, DestroySession</code></p>\n<h2 id=\"core-functions\" class=\"heading\">Core functions</h2>\n<h3 id=\"create-session\">Create Session</h3>\n<p>You can check for Epic's official implementation of <code>CreateSession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\CreateSessionCallbackProxy.cpp</code>\nWe need an <code>IOnlineSession</code> object to get going, usually you can get it with <code>Online::GetSubsystem::GetSessionInterface</code>. In there we pass a player ID, that player would be host player, in this case I use <code>GetPrimaryPlayerUniqueIdRepl</code>. With <code>FOnlineSessionSettings</code>, you can customize the session to your liking.</p>\n<pre><code class=\"language-c# code-highlight\"><span class=\"code-line\">FOnlineSessionSettings Settings;\n</span><span class=\"code-line\">Settings.NumPublicConnections = 10;\n</span><span class=\"code-line\">Settings.bShouldAdvertise = true;\n</span><span class=\"code-line\">Settings.bAllowJoinInProgress = true;\n</span><span class=\"code-line\">Settings.bIsLANMatch = true;\n</span><span class=\"code-line\">Settings.bUsesPresence = true;\n</span><span class=\"code-line\">Settings.bAllowJoinViaPresence = true;\n</span><span class=\"code-line\">auto Sessions = Online::GetSubsystem(GetWorld())->GetSessionInterface();\n</span><span class=\"code-line\">Sessions->CreateSession(*GetPrimaryPlayerUniqueIdRepl(), NAME_GameSession, Settings);\n</span></code></pre>\n<h3 id=\"find-session\">Find Session</h3>\n<p>You can check for Epic's official implementation of <code>FindSessions</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\FindSessionsCallbackProxy.cpp</code>\nResult will be added to <code>SessionSearch</code></p>\n<pre><code class=\"language-c++ code-highlight\"><span class=\"code-line\">// Declare this somewhere in your class property\n</span><span class=\"code-line\">TSharedRef&#x3C;FOnlineSessionSearch> SessionSearch;\n</span><span class=\"code-line\">// Find method\n</span><span class=\"code-line\">SessionSearch->bIsLanQuery = bIsLAN;\n</span><span class=\"code-line\">SessionSearch->MaxSearchResults = 20;\n</span><span class=\"code-line\">SessionSearch->PingBucketSize = 1000;\n</span><span class=\"code-line\">auto Sessions = Online::GetSubsystem(GetWorld())->GetSessionInterface();\n</span><span class=\"code-line\">Sessions->FindSessions(*GetPrimaryPlayerUniqueIdRepl(), SessionSearch);\n</span></code></pre>\n<h3 id=\"join-session\">Join Session</h3>\n<p>You can check for Epic's official implementation of <code>JoinSession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\JoinSessionCallbackProxy.cpp</code></p>\n<pre><code class=\"language-c++ code-highlight\"><span class=\"code-line\">// Suppose we want to join the first game we found\n</span><span class=\"code-line\">int SessionIndexInSearchResults = 0;\n</span><span class=\"code-line\">FOnlineSessionSearchResult SearchResult = SessionSearch->SearchResults[SessionIndexInSearchResults];\n</span><span class=\"code-line\">auto Sessions = Online::GetSubsystem(GetWorld())->GetSessionInterface();\n</span><span class=\"code-line\">Sessions->JoinSession(*GetPrimaryPlayerUniqueIdRepl(), NAME_GameSession, SearchResult);\n</span></code></pre>\n<h3 id=\"destroy-session\">Destroy Session</h3>\n<p>You can check for Epic's official implementation of <code>JoinSession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\JoinSessionCallbackProxy.cpp</code></p>\n<pre><code class=\"language-c++ code-highlight\"><span class=\"code-line\">auto Sessions = Online::GetSubsystem(GetWorld())->GetSessionInterface();\n</span><span class=\"code-line\">if (!Sessions->DestroySession(NAME_GameSession)) {\n</span><span class=\"code-line\">  GAME_LOG(Display, TEXT(\"Something went wrong during leaving\"));\n</span><span class=\"code-line\">}\n</span><span class=\"code-line\">// TravelToHome();\n</span><span class=\"code-line\">\n</span></code></pre>\n<h2 id=\"expose-functionality-to-blueprint\" class=\"heading\">Expose functionality to Blueprint</h2>\n<p><code>// Give working C++ code and screen shot BP scripts</code></p>\n<h2 id=\"build-an-user-interface\" class=\"heading\">Build an user interface</h2>\n<p><code>// UI Screenshot</code></p>\n<h2 id=\"conclusions\" class=\"heading\">Conclusions</h2>\n<p><code>// Some nice paragraph goes here</code></p>\n<h3 id=\"learn-more\">Learn more</h3>\n<p>Official documentation: <a href=\"https://docs.unrealengine.com/5.0/en-US/online-subsystem-in-unreal-engine/\" target=\"_blank\" rel=\"noopener noreferer\">https://docs.unrealengine.com/5.0/en-US/online-subsystem-in-unreal-engine/</a></p>","ogImage":null},"__N_SSG":true}