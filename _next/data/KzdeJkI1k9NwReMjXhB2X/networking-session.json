{"pageProps":{"title":"Unreal Engine Networking - Session","subtitle":"How to use Session to implement a simple game lobby mechanic","category":"ue","date":"2022-06-21","content":"<h2 id=\"this-article-is-under-construction\" class=\"heading\"><strong>THIS ARTICLE IS UNDER CONSTRUCTION</strong></h2>\n<h2 id=\"introduction\" class=\"heading\">Introduction</h2>\n<h3 id=\"feature-design\">Feature design</h3>\n<p>In this article we will build a host game/join game mechanic. Player are allowed to 'host' a game. After that people joining games and start playing.\nThere are 4 operations we will be implementing here</p>\n<ul>\n<li>Host Game - <code>Create Session</code> in UE term</li>\n<li>List Opening Game - <code>Find Sessions</code> in UE term</li>\n<li>Join Game - <code>Join Session</code> in UE term</li>\n<li>Leave Game - <code>Destroy Session</code> in UE term</li>\n</ul>\n<h3 id=\"before-we-begin\">Before we begin</h3>\n<h4 id=\"make-sure-you-enabled-online-subsystem-plugin\">Make sure you enabled online subsystem plugin</h4>\n<p>Open <code>Plugin Settings</code>, and enable <code>Online Base</code>, <code>Online Subsystem</code>, <code>Online Subsystem Utils</code>. Then enable Steam, or something else according to your case. In this case, I just want to connect over LAN so I went with <code>Online Subsystem NULL</code></p>\n<p>Your setting would looks like this\n<img src=\"ue/networking-session/plugin-setting.png\" alt=\"\"></p>\n<h4 id=\"set-pie-player-count-to-at-least-2\">Set PIE player count to at least 2</h4>\n<p>We need at least 2 players to test this kind of behavior. By default it's 1, so adjust number of players accordingly. Their <code>Net Mode</code> have to be <code>Standalone</code></p>\n<p>Your setting would looks like this\n<img src=\"ue/networking-session/play-setting.png\" alt=\"\"></p>\n<h2 id=\"core-functions\" class=\"heading\">Core functions</h2>\n<h3 id=\"create-session\">Create session</h3>\n<p>You can check for Epic's official implementation of <code>CreateSession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\CreateSessionCallbackProxy.cpp</code></p>\n<p>We need an <code>IOnlineSession</code> object to get going, usually you can get it with <code>Online::GetSubsystem::GetSessionInterface</code>.\nIn there we pass a player ID, that player would be host player, in this case I use <code>GetPrimaryPlayerUniqueIdRepl</code>.</p>\n<p>Customization is done via <code>FOnlineSessionSettings</code>.\nNote that those settings are pretty fragile, your game might not be found by others if not done correctly.\nThe options below are confirmed working in <code>UE 5.0</code> for creating a LAN game.</p>\n<pre class=\"language-cpp\"><code class=\"language-cpp code-highlight\"><span class=\"code-line\">FOnlineSessionSettings Settings<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>NumPublicConnections <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>bShouldAdvertise <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>bAllowJoinInProgress <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>bIsLANMatch <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>bUsesPresence <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Settings<span class=\"token punctuation\">.</span>bAllowJoinViaPresence <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">auto</span> Sessions <span class=\"token operator\">=</span> <span class=\"token class-name\">Online</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSubsystem</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetSessionInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Sessions<span class=\"token operator\">-></span><span class=\"token function\">CreateSession</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetPrimaryPlayerUniqueIdRepl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> NAME_GameSession<span class=\"token punctuation\">,</span> Settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n<h3 id=\"find-session\">Find session</h3>\n<p>You can check for Epic's official implementation of <code>FindSessions</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\FindSessionsCallbackProxy.cpp</code>\nResult will be populated to <code>SessionSearch</code></p>\n<pre class=\"language-cpp\"><code class=\"language-cpp code-highlight\"><span class=\"code-line\"><span class=\"token comment\">// Declare this somewhere in your class property, we will need this in other methods</span>\n</span><span class=\"code-line\">TSharedRef<span class=\"token operator\">&#x3C;</span>FOnlineSessionSearch<span class=\"token operator\">></span> SessionSearch<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// Find method</span>\n</span><span class=\"code-line\">SessionSearch<span class=\"token operator\">-></span>bIsLanQuery <span class=\"token operator\">=</span> bIsLAN<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">SessionSearch<span class=\"token operator\">-></span>MaxSearchResults <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">SessionSearch<span class=\"token operator\">-></span>PingBucketSize <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">auto</span> Sessions <span class=\"token operator\">=</span> <span class=\"token class-name\">Online</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSubsystem</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetSessionInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Sessions<span class=\"token operator\">-></span><span class=\"token function\">FindSessions</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetPrimaryPlayerUniqueIdRepl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> SessionSearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n<h3 id=\"join-session\">Join session</h3>\n<p>You can check for Epic's official implementation of <code>JoinSession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\JoinSessionCallbackProxy.cpp</code></p>\n<pre class=\"language-cpp\"><code class=\"language-cpp code-highlight\"><span class=\"code-line\"><span class=\"token comment\">// Suppose that we want to join the first game we found</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">int</span> SessionIndexInSearchResults <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">FOnlineSessionSearchResult SearchResult <span class=\"token operator\">=</span> SessionSearch<span class=\"token operator\">-></span>SearchResults<span class=\"token punctuation\">[</span>SessionIndexInSearchResults<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">auto</span> Sessions <span class=\"token operator\">=</span> <span class=\"token class-name\">Online</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSubsystem</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetSessionInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">Sessions<span class=\"token operator\">-></span><span class=\"token function\">JoinSession</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetPrimaryPlayerUniqueIdRepl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> NAME_GameSession<span class=\"token punctuation\">,</span> SearchResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n<p>In this example, I made it simple by joining the first game in the result. I don't even bother checking if there the result are empty or not. In real project, you might probably want have an GUI for player to pick a game to join.</p>\n<h3 id=\"destroy-session\">Destroy session</h3>\n<p>You can check for Epic's official implementation of <code>DestroySession</code> at <code>Engine\\Plugins\\Online\\OnlineSubsystemUtils\\Source\\OnlineSubsystemUtils\\Private\\DestroySessionCallbackProxy.cpp</code></p>\n<pre class=\"language-cpp\"><code class=\"language-cpp code-highlight\"><span class=\"code-line\"><span class=\"token keyword\">auto</span> Sessions <span class=\"token operator\">=</span> <span class=\"token class-name\">Online</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSubsystem</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetSessionInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Sessions<span class=\"token operator\">-></span><span class=\"token function\">DestroySession</span><span class=\"token punctuation\">(</span>NAME_GameSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token function\">GAME_LOG</span><span class=\"token punctuation\">(</span>Display<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong during leaving\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// TravelToHome();</span>\n</span></code></pre>\n<h2 id=\"expose-functionality-to-blueprint\" class=\"heading\">Expose functionality to Blueprint</h2>\n<p><code>// Give working C++ code and screen shot BP scripts</code></p>\n<h2 id=\"build-an-user-interface\" class=\"heading\">Build an user interface</h2>\n<p><code>// UI Screenshot</code></p>\n<h2 id=\"conclusions\" class=\"heading\">Conclusions</h2>\n<p><code>// Some nice paragraph goes here</code></p>\n<h3 id=\"learn-more\">Learn more</h3>\n<p>Official documentation: <a href=\"https://docs.unrealengine.com/5.0/en-US/online-subsystem-in-unreal-engine/\" target=\"_blank\" rel=\"noopener noreferer\">https://docs.unrealengine.com/5.0/en-US/online-subsystem-in-unreal-engine/</a></p>","ogImage":"ue/networking-session/plugin-setting.png"},"__N_SSG":true}